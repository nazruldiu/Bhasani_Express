using BMS_Scheduler.Setup;
using Serenity.Data;
using System;
using System.Data;
using System.Linq;

namespace BMS_Scheduler
{
    public class CodeGenerationHelper
    {
        public string GetNewNumber(IDbConnection connection, Common.AutoGeneratedCodeConfiguration codeFor)
        {
            GetCodeConfiguration(connection, codeFor, out CodeGenerationConfigRow config);
            return null;
        }

        private void GetCodeConfiguration(IDbConnection connection, Common.AutoGeneratedCodeConfiguration codeFor, out CodeGenerationConfigRow config)
        {

            var fld = CodeGenerationConfigRow.Fields;
            var query = new SqlQuery()
                .From(fld)
                .Where(fld.ConfigurationFor == (int)codeFor && fld.EffectiveDate <= DateTime.Now.Date)
                .Select(fld.Id, fld.ConfigurationFor, fld.EffectiveDate, fld.IsAutoGenerated)
                .Select(fld.CodeLenth, fld.StartFrom, fld.Prefix, fld.Suffix, fld.AddDay, fld.AddMonth)
                .Select(fld.AddYear, fld.Seperator, fld.AddAgencyPrefix, fld.AddClientPrefix)
                .OrderBy(fld.EffectiveDate, desc: true)
                .Take(1);

            config = connection.Query<CodeGenerationConfigRow>(query).FirstOrDefault();
            if (config != null)
            {
                var seperatorFld = CodeGenerationConfigSeperatorRow.Fields;
                query = new SqlQuery()
                    .From(seperatorFld)
                    .Where(seperatorFld.CodeGenerationConfigId == config.Id.Value)
                    .Select(seperatorFld.FieldNameId);
                config.SegmentSeperators = connection.Query<int>(query).ToList();
            }
        }
    }
}
