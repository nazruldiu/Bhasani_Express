using Serenity.ComponentModel;
using System.ComponentModel;

namespace BMS_Scheduler.Common
{


    [EnumKey("YesNoType"), ScriptInclude]
    public enum YesNoType
    {
        Yes = 1,
        No = 0
    }

    [EnumKey("TVCSpotType"), ScriptInclude]
    public enum TVCSpotType
    {
        Multispot = 1,
        SingleSpot = 2
    }

    [EnumKey("TVCPlacementPosition"), ScriptInclude]
    public enum TVCPlacementPosition
    {
        [Description("Commercial Break")]
        CommercialBreak = 1,
        [Description("Segment Body")]
        SegmentBody = 2
    }

    [EnumKey("IdentityClaimType"), ScriptInclude]
    public enum IdentityClaimType
    {
        [Description("TvChannelId")]
        TvChannelId
    }

    [EnumKey("SpotType"), ScriptInclude]
    public enum SpotType
    {
        [Description("Paid")]
        Paid = 1,
        [Description("Bonus")]
        Bonus = 2,
    }
    [EnumKey("SegmentType"), ScriptInclude]
    public enum SegmentType
    {
        [Description("By Time Slot")]
        ByTimeSlot = 1,
        [Description("By Program Banner")]
        ByProgramBanner = 2,
        [Description("By Program Category")]
        ByProgramCategory = 3,
        [Description("By Program Name")]
        ByProgramName = 4,
    }

    [EnumKey("SpotDurationType"), ScriptInclude]
    public enum SpotDurationType
    {
        [Description("By Spot")]
        BySpot = 1,
        [Description("By Second")]
        BySecond = 2,
    }

    [EnumKey("RundownPositionPermission"), ScriptInclude]
    public enum RundownPositionPermission
    {
        [Description("Commercial")]
        Commercial = 10,
        [Description("Segment Body")]
        SegmentBody = 20,
        [Description("All")]
        All = 100,
    }

    [EnumKey("UserType"), ScriptInclude]
    public enum UserType
    {
        [Description("Internal")]
        Internal = 1,
        [Description("External")]
        External = 2,
    }

    [EnumKey("ProgramTelecastType"), ScriptInclude]
    public enum ProgramTelecastType
    {
        [Description("Regular")]
        Regular = 1,
        [Description("Repeat")]
        Repeat = 2,
    }

    [EnumKey("WorkflowType"), ScriptInclude]
    public enum WorkflowType
    {
        [Description("FPC")]
        FPC = 1,
        [Description("RO")]
        RO = 2,
        [Description("Rundown")]
        Rundown = 3,
        [Description("Time Slot Segment")]
        TimeSlotSegment = 4
    }

    [EnumKey("CategoryDependOn")]
    public enum CategoryDependOn
    {
        [Description("Content Load Depend on RO Booking")]
        RoBooking = 10,
        [Description("Content Load Depend on FPC")]
        FPC = 20,
    }

    [EnumKey("PositionSegmentType")]
    public enum PositionSegmentType
    {
        [Description("For Regular TVC")]
        RegularTVC = 10,
        [Description("For Segment Body (Non Regular TVC)")]
        SegmentBody = 20,
        [Description("All")]
        All = 30,
    }

    [EnumKey("PositionAdjustmentType")]
    public enum PositionAdjustmentType
    {
        [Description("Adjust From Previous Slot")]
        FromPreviousSlot = 10,
        [Description("Adjust To Next Slot")]
        ToNextSlot = 20,
    }

    [EnumKey("AutoGeneratedCodeConfiguration")]
    public enum AutoGeneratedCodeConfiguration
    {
        [Description("Invoice")]
        Invoice = 10,
        [Description("Time Code")]
        TimeCode = 20,
        [Description("Client")]
        Client = 30,
        [Description("Agency")]
        Agency = 40,
        [Description("RO")]
        Ro = 50,
        [Description("Program")]
        Program = 60,
        [Description("Client Contract")]
        ClientContract = 70,
    }

    [EnumKey("AutoGeneratedCodeFields")]
    public enum AutoGeneratedCodeFields
    {
        [Description("Day")]
        Day = 1,
        [Description("Month")]
        Month = 2,
        [Description("Year")]
        Year = 3,
        [Description("Prefix")]
        Prefix = 4,
        [Description("Suffix")]
        Suffix = 5,
        [Description("Agent Prefix")]
        AgentPrefix = 6,
        [Description("Client Prefix")]
        ClientPrefix = 7,
        [Description("Program Category Prefix")]
        ProgramCategoryPrefix = 8
    }

    #region Approval 

    [EnumKey("ApprovalStatus"), ScriptInclude]
    public enum ApprovalStatus
    {
        [Description("Drafted")]
        Draft = 1,
        [Description("Submited")]
        Submit = 2,
        [Description("Recommended")]
        Recommend = 3,
        [Description("Approved")]
        Approve = 4,
        [Description("Regreted")]
        Reject = 5,
        [Description("Canceled")]
        Cancel = 6,
        [Description("Resubmitted")]
        ReSubmit = 7,
        [Description("Delete")]
        Delete = 8
    }


    [EnumKey("ApprovalProcess")]
    public enum ApprovalProcess
    {
        [Description("FPC")]
        FPC = 1,
        [Description("RO Booking")]
        RO = 2,
        [Description("Client Contract")]
        ClientContract = 3,
        [Description("Invoice")]
        Invoice = 4
    }

    [EnumKey("ApprovalActionType")]
    public enum ApprovalActionType
    {
        [Description("None")]
        None = 0,
        [Description("Forward")]
        Forward = 1,
        [Description("Backward")]
        Backward = -1

    }


    [EnumKey("ApprovalStepType")]
    public enum ApprovalStepType
    {
        [Description("Next Step")]
        NextStep = 1,
        [Description("Last Step")]
        LastStep = 2,
        [Description("Previous Step")]
        PreviousStep = -1,
        [Description("First Step")]
        FirstStep = 0
    }

    [EnumKey("ApproverType")]
    public enum ApproverType
    {
        [Description("Main Approver")]
        Main = 20,
        [Description("Alternet Approver")]
        Alternet = 10
    }

    [EnumKey("ApproverAuthorType")]
    public enum ApproverAuthorType
    {
        [Description("Specific Employee")]
        SpecificEmployee = 10,
        [Description("Supervisor")]
        Supervisor = 20,
        [Description("Designation")]
        Designation = 30
    }

    #endregion

    [EnumKey("ClientContractType")]
    public enum ClientContractInformationType
    {
        [Description("Regular")]
        Regular = 1,
        [Description("GPRP")]
        GPRP = 2,
        [Description("Program Banner")]
        ProgramBanner = 3,
        [Description("Scrolling")]
        Scrolling = 4,
        [Description("Doggy")]
        Doggy = 5,
        [Description("L-Shape/Pop Up")]
        LShapeOrPopup = 6
    }

    public enum MailQueuePriority
    {
        High = 1,
        Medium = 2,
        Low = 3
    }

    public enum MailStatus
    {
        Failed = -1,
        InQueue = 0,
        Sent = 1
    }

    #region Billing 
    [EnumKey("InvoiceTemplateType")]
    public enum InvoiceTemplateType
    {
        [Description("Regular TVC")]
        Regular = 1,
        [Description("GPRP Booking")]
        GPRP = 2,
        [Description("Program Branding")]
        ProgramBranding = 3,
        [Description("Scrolling")]
        Scrolling = 4,
        [Description("Doggy")]
        Doggy = 5,
        [Description("L-Shape/Pop Up")]
        LShape = 6
    }

    [EnumKey("InvoiceParticularsBrakingType")]
    public enum InvoiceParticularsBrakingType
    {
        [Description("Time Slot")]
        TimeSlot = 1,
        [Description("Program Category")]
        ProgramCategory = 2,
        [Description("Combined")]
        Combined = 3
    }
    #endregion

    public static class MyEnumExtensions
    {
        public static string ToDescriptionString(this IdentityClaimType val)
        {
            DescriptionAttribute[] attributes = (DescriptionAttribute[])val
               .GetType()
               .GetField(val.ToString())
               .GetCustomAttributes(typeof(DescriptionAttribute), false);
            return attributes.Length > 0 ? attributes[0].Description : string.Empty;
        }
    }
}


